{"version":3,"sources":["components/ImageViewer.js","components/Button.js","components/CircleButton.js","components/IconButton.js","components/EmojiPicker.js","components/EmojiList.js","components/EmojiSticker.js","App.js","assets/emoji1.png","assets/emoji2.png","assets/emoji3.png","assets/emoji4.png","assets/emoji5.png","assets/emoji6.png","assets/background-image.png"],"names":["ImageViewer","placeholderImageSource","selectedImage","imageSource","uri","Image","source","style","styles","image","StyleSheet","create","width","height","borderRadius","Button","label","theme","onPress","View","buttonContainer","borderWidth","borderColor","Pressable","button","backgroundColor","FontAwesome","name","size","color","buttonIcon","Text","buttonLabel","marginHorizontal","alignItems","justifyContent","padding","flexDirection","paddingRight","fontSize","CircleButton","circleButtonContainer","circleButton","MaterialIcons","flex","IconButton","icon","iconButton","iconButtonLabel","marginTop","EmojiPicker","isVisible","children","onClose","Modal","animationType","transparent","visible","modalContent","titleContainer","title","borderTopRightRadius","borderTopLeftRadius","position","bottom","paddingHorizontal","pickerContainer","paddingVertical","EmojiList","onSelect","onCloseModal","useState","require","emoji","FlatList","horizontal","showsHorizontalScrollIndicator","Platform","OS","data","contentContainerStyle","listContainer","renderItem","item","index","marginRight","AnimatedImage","Animated","createAnimatedComponent","AnimatedView","EmojiSticker","imageSize","stickerSource","translateX","useSharedValue","translateY","scaleImage","onDoubleTap","useAnimatedGestureHandler","onActive","value","onDrag","onStart","event","context","translationX","translationY","imageStyle","useAnimatedStyle","withSpring","containerStyle","transform","onGestureEvent","top","numberOfTaps","resizeMode","PlaceholderImage","App","MediaLibrary","status","requestPermission","isModalVisible","setIsModalVisible","pickedEmoji","setPickedEmoji","setSelectedImage","showAppOptions","setShowAppOptions","imageRef","useRef","onModalClose","onSaveImageAsync","localUri","captureRef","quality","alert","e","console","log","domtoimage","toJpeg","current","then","dataUrl","link","document","createElement","download","href","click","catch","pickImageAsync","result","ImagePicker","allowsEditing","canceled","assets","container","imageContainer","ref","collapsable","optionsContainer","optionsRow","footerContainer","StatusBar","paddingTop","marginBottom","module","exports"],"mappings":"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","file":"static/js/app.dda7cb08.chunk.js","sourcesContent":["import { StyleSheet, Image } from \"react-native\";\r\n\r\nexport default function ImageViewer({ placeholderImageSource, selectedImage }) {\r\n  const imageSource = selectedImage !== null\r\n    ? { uri: selectedImage }\r\n    : placeholderImageSource;\r\n\r\n  return <Image source={imageSource} style={styles.image} />;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width: 320,\r\n    height: 440,\r\n    borderRadius: 18,\r\n  },\r\n});\r\n","import { StyleSheet, View, Pressable, Text } from \"react-native\";\r\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\r\n\r\nexport default function Button({ label, theme, onPress }) {\r\n  if (theme === \"primary\") {\r\n    return (\r\n      <View\r\n        style={[\r\n          styles.buttonContainer,\r\n          { borderWidth: 4, borderColor: \"#ffd33d\", borderRadius: 18 },\r\n        ]}\r\n      >\r\n        <Pressable\r\n          style={[styles.button, { backgroundColor: \"#fff\" }]}\r\n          onPress={onPress}\r\n        >\r\n          <FontAwesome\r\n            name=\"picture-o\"\r\n            size={18}\r\n            color=\"#25292e\"\r\n            style={styles.buttonIcon}\r\n          />\r\n          <Text style={[styles.buttonLabel, { color: \"#25292e\" }]}>\r\n            {label}\r\n          </Text>\r\n        </Pressable>\r\n      </View>\r\n    );\r\n  }\r\n  return (\r\n    <View style={styles.buttonContainer}>\r\n      <Pressable\r\n        style={styles.button}\r\n        onPress={onPress}\r\n      >\r\n        <Text style={styles.buttonLabel}>{label}</Text>\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  buttonContainer: {\r\n    width: 320,\r\n    height: 68,\r\n    marginHorizontal: 20,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 3,\r\n  },\r\n  button: {\r\n    borderRadius: 10,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n  buttonIcon: {\r\n    paddingRight: 8,\r\n  },\r\n  buttonLabel: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n","import { View, Pressable, StyleSheet } from \"react-native\";\r\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\r\n\r\nexport default function CircleButton({ onPress }) {\r\n  return (\r\n    <View style={styles.circleButtonContainer}>\r\n      <Pressable style={styles.circleButton} onPress={onPress}>\r\n        <MaterialIcons name=\"add\" size={38} color=\"#25292e\" />\r\n      </Pressable>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  circleButtonContainer: {\r\n    width: 84,\r\n    height: 84,\r\n    marginHorizontal: 60,\r\n    borderWidth: 4,\r\n    borderColor: \"#ffd33d\",\r\n    borderRadius: 42,\r\n    padding: 3,\r\n  },\r\n  circleButton: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 42,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n});\r\n","import { Pressable, StyleSheet, Text } from \"react-native\";\r\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\r\n\r\nexport default function IconButton({ icon, label, onPress }) {\r\n  return (\r\n    <Pressable style={styles.iconButton} onPress={onPress}>\r\n      <MaterialIcons name={icon} size={24} color=\"#fff\" />\r\n      <Text style={styles.iconButtonLabel}>{label}</Text>\r\n    </Pressable>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  iconButton: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  iconButtonLabel: {\r\n    color: \"#fff\",\r\n    marginTop: 12,\r\n  },\r\n});\r\n","import { Modal, View, Text, Pressable, StyleSheet } from \"react-native\";\r\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\r\n\r\nexport default function EmojiPicker({ isVisible, children, onClose }) {\r\n  return (\r\n    <Modal animationType=\"slide\" transparent={true} visible={isVisible}>\r\n      <View style={styles.modalContent}>\r\n        <View style={styles.titleContainer}>\r\n          <Text style={styles.title}>Choose a sticker</Text>\r\n          <Pressable onPress={onClose}>\r\n            <MaterialIcons name=\"close\" color=\"#fff\" size={22} />\r\n          </Pressable>\r\n        </View>\r\n        {children}\r\n      </View>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  modalContent: {\r\n    height: \"25%\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#25292e\",\r\n    borderTopRightRadius: 18,\r\n    borderTopLeftRadius: 18,\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n  },\r\n  titleContainer: {\r\n    height: \"16%\",\r\n    backgroundColor: \"#464C55\",\r\n    borderTopRightRadius: 10,\r\n    borderTopLeftRadius: 10,\r\n    paddingHorizontal: 20,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  title: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n  },\r\n  pickerContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 50,\r\n    paddingVertical: 20,\r\n  },\r\n});\r\n","import { useState } from \"react\";\r\nimport { StyleSheet, FlatList, Image, Platform, Pressable } from \"react-native\";\r\n\r\nexport default function EmojiList({ onSelect, onCloseModal }) {\r\n  const [emoji] = useState([\r\n    require(\"../assets/emoji1.png\"),\r\n    require(\"../assets/emoji2.png\"),\r\n    require(\"../assets/emoji3.png\"),\r\n    require(\"../assets/emoji4.png\"),\r\n    require(\"../assets/emoji5.png\"),\r\n    require(\"../assets/emoji6.png\"),\r\n  ]);\r\n\r\n  return (\r\n    <FlatList\r\n      horizontal\r\n      showsHorizontalScrollIndicator={Platform.OS === \"web\" ? true : false}\r\n      data={emoji}\r\n      contentContainerStyle={styles.listContainer}\r\n      renderItem={({ item, index }) => {\r\n        return (\r\n          <Pressable\r\n            onPress={() => {\r\n              onSelect(item);\r\n              onCloseModal();\r\n            }}\r\n          >\r\n            <Image source={item} key={index} style={styles.image} />\r\n          </Pressable>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  listContainer: {\r\n    borderTopRightRadius: 10,\r\n    borderTopLeftRadius: 10,\r\n    paddingHorizontal: 20,\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    marginRight: 20,\r\n  },\r\n});\r\n","import { View, Image } from \"react-native\";\r\nimport {\r\n  PanGestureHandler,\r\n  TapGestureHandler,\r\n} from \"react-native-gesture-handler\";\r\nimport Animated, {\r\n  useAnimatedStyle,\r\n  useSharedValue,\r\n  useAnimatedGestureHandler,\r\n  withSpring,\r\n} from \"react-native-reanimated\";\r\n\r\nconst AnimatedImage = Animated.createAnimatedComponent(Image);\r\nconst AnimatedView = Animated.createAnimatedComponent(View);\r\n\r\nexport default function EmojiSticker({ imageSize, stickerSource }) {\r\n  const translateX = useSharedValue(0);\r\n  const translateY = useSharedValue(0);\r\n  const scaleImage = useSharedValue(imageSize);\r\n\r\n  //on double-tap scale the icon up 2x original size\r\n  const onDoubleTap = useAnimatedGestureHandler({\r\n    onActive: () => {\r\n      if (scaleImage.value && scaleImage.value <= 160) {\r\n        scaleImage.value = scaleImage.value * 2;\r\n      }\r\n    },\r\n  });\r\n\r\n  const onDrag = useAnimatedGestureHandler({\r\n    onStart: (event, context) => {\r\n      context.translateX = translateX.value;\r\n      context.translateY = translateY.value;\r\n    },\r\n    onActive: (event, context) => {\r\n      translateX.value = event.translationX + context.translateX;\r\n      translateY.value = event.translationY + context.translateY;\r\n    },\r\n  });\r\n\r\n  const imageStyle = useAnimatedStyle(() => {\r\n    return {\r\n      width: withSpring(scaleImage.value),\r\n      height: withSpring(scaleImage.value),\r\n    };\r\n  });\r\n\r\n  const containerStyle = useAnimatedStyle(() => {\r\n    return {\r\n      transform: [\r\n        {\r\n          translateX: translateX.value,\r\n        },\r\n        {\r\n          translateY: translateY.value,\r\n        },\r\n      ],\r\n    };\r\n  });\r\n\r\n  return (\r\n    <PanGestureHandler onGestureEvent={onDrag}>\r\n      <AnimatedView style={[containerStyle, { top: -350 }]}>\r\n        <TapGestureHandler onGestureEvent={onDoubleTap} numberOfTaps={2}>\r\n          <AnimatedImage\r\n            source={stickerSource}\r\n            resizeMode=\"contain\"\r\n            style={[imageStyle, { width: imageSize, height: imageSize }]}\r\n          />\r\n        </TapGestureHandler>\r\n      </AnimatedView>\r\n    </PanGestureHandler>\r\n  );\r\n}\r\n","import { GestureHandlerRootView } from \"react-native-gesture-handler\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, Image, Platform } from \"react-native\";\nimport ImageViewer from \"./components/ImageViewer\";\nimport Button from \"./components/Button\";\nimport CircleButton from \"./components/CircleButton\";\nimport IconButton from \"./components/IconButton\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport EmojiPicker from \"./components/EmojiPicker\";\nimport EmojiList from \"./components/EmojiList\";\nimport EmojiSticker from \"./components/EmojiSticker\";\nimport * as MediaLibrary from \"expo-media-library\";\nimport domtoimage from \"dom-to-image\";\nimport { captureRef } from \"react-native-view-shot\";\nimport { useState, useRef } from \"react\";\n\n//APP.js = entry-point of app, rendered when the develop server starts\n\n// store image in a placeholder\nconst PlaceholderImage = require(\"./assets/background-image.png\");\n\nexport default function App() {\n  //init STATE\n  const [status, requestPermission] = MediaLibrary.usePermissions();\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [pickedEmoji, setPickedEmoji] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [showAppOptions, setShowAppOptions] = useState(false);\n\n  const imageRef = useRef();\n  const onReset = () => {\n    setShowAppOptions(false);\n  };\n\n  const onAddSticker = () => {\n    setIsModalVisible(true);\n  };\n\n  const onModalClose = () => {\n    setIsModalVisible(false);\n  };\n\n  if (status === null) {\n    requestPermission();\n  }\n\n  const onSaveImageAsync = async () => {\n    if (Platform.OS !== \"web\") {\n      try {\n        const localUri = await captureRef(imageRef, {\n          height: 440,\n          quality: 1,\n        });\n        await MediaLibrary.saveToLibraryAsync(localUri);\n        if (localUri) {\n          alert(\"Saved!\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    } else {\n      domtoimage\n        .toJpeg(imageRef.current, {\n          quality: 0.95,\n          width: 320,\n          height: 440,\n        })\n        .then((dataUrl) => {\n          let link = document.createElement(\"a\");\n          link.download = \"sticker-smash.jpeg\";\n          link.href = dataUrl;\n          link.click();\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n  };\n\n  const pickImageAsync = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: true,\n      quality: 1,\n    });\n\n    if (!result.canceled) {\n      setSelectedImage(result.assets[0].uri);\n      setShowAppOptions(true);\n    } else {\n      alert(\"You did not select any image.\");\n    }\n  };\n\n  return (\n    // reference a css class created in the stylesheet\n    <GestureHandlerRootView style={styles.container}>\n      <View style={styles.imageContainer}>\n        <View ref={imageRef} collapsable={false}>\n          <ImageViewer\n            placeholderImageSource={PlaceholderImage}\n            selectedImage={selectedImage}\n          />\n          {pickedEmoji !== null ? (\n            <EmojiSticker imageSize={40} stickerSource={pickedEmoji} />\n          ) : null}\n        </View>\n      </View>\n      {showAppOptions ? (\n        <View style={styles.optionsContainer}>\n          <View style={styles.optionsRow}>\n            <IconButton icon=\"refresh\" label=\"Reset\" onPress={onReset} />\n            <CircleButton onPress={onAddSticker} />\n            <IconButton\n              icon=\"save-alt\"\n              label=\"Save\"\n              onPress={onSaveImageAsync}\n            />\n          </View>\n        </View>\n      ) : (\n        <View style={styles.footerContainer}>\n          <Button\n            onPress={pickImageAsync}\n            theme=\"primary\"\n            label=\"Choose a photo\"\n          />\n          <Button\n            onPress={() => setShowAppOptions(true)}\n            label=\"Use this photo\"\n          />\n        </View>\n      )}\n      <EmojiPicker isVisible={isModalVisible} onClose={onModalClose}>\n        <EmojiList onSelect={setPickedEmoji} onCloseModal={onModalClose} />\n      </EmojiPicker>\n      <StatusBar style=\"light\" />\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#25292e\",\n    alignItems: \"center\",\n  },\n  imageContainer: {\n    flex: 1,\n    paddingTop: 58,\n  },\n  image: {\n    width: 320,\n    height: 440,\n    borderRadius: 18,\n  },\n  optionsContainer: {\n    position: \"absolute\",\n    bottom: 80,\n  },\n  optionsRow: {\n    alignItems: \"center\",\n    flexDirection: \"row\",\n  },\n  footerContainer: {\n    flex: 1 / 3,\n    alignItems: \"center\",\n    marginBottom: 60,\n  },\n});\n","module.exports = __webpack_public_path__ + \"static/media/emoji1.7df01aee.png\";","module.exports = __webpack_public_path__ + \"static/media/emoji2.5685d9a2.png\";","module.exports = __webpack_public_path__ + \"static/media/emoji3.d02b4d80.png\";","module.exports = __webpack_public_path__ + \"static/media/emoji4.9f86a388.png\";","module.exports = __webpack_public_path__ + \"static/media/emoji5.3ca0d7e3.png\";","module.exports = __webpack_public_path__ + \"static/media/emoji6.e2cad3fa.png\";","module.exports = __webpack_public_path__ + \"static/media/background-image.979cd865.png\";"],"sourceRoot":""}